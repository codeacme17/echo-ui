import{useRef as R,useEffect as A}from"react";const I=(n,t,e,i,h=!0,o=null)=>{const l=R({width:t,height:e});return A(()=>{const r=P(i,100),s=new ResizeObserver(([u])=>{const{width:a,height:f}=u.contentRect;(a!==l.current.width||f!==l.current.height)&&(l.current={width:a,height:f},h?r():i())});return n.current&&s.observe(n.current),()=>s.disconnect()},[n,h,t,e,o]),l},P=(n,t)=>{let e;return function(){e||(n(),e=!0,setTimeout(()=>{e=!1,n()},t))}},M=Math.PI,v=2*M,p=1e-6,C=v-p;function E(n){this._+=n[0];for(let t=1,e=n.length;t<e;++t)this._+=arguments[t]+n[t]}function S(n){let t=Math.floor(n);if(!(t>=0))throw new Error(`invalid digits: ${n}`);if(t>15)return E;const e=10**t;return function(i){this._+=i[0];for(let h=1,o=i.length;h<o;++h)this._+=Math.round(arguments[h]*e)/e+i[h]}}class k{constructor(t){this._x0=this._y0=this._x1=this._y1=null,this._="",this._append=t==null?E:S(t)}moveTo(t,e){this._append`M${this._x0=this._x1=+t},${this._y0=this._y1=+e}`}closePath(){this._x1!==null&&(this._x1=this._x0,this._y1=this._y0,this._append`Z`)}lineTo(t,e){this._append`L${this._x1=+t},${this._y1=+e}`}quadraticCurveTo(t,e,i,h){this._append`Q${+t},${+e},${this._x1=+i},${this._y1=+h}`}bezierCurveTo(t,e,i,h,o,l){this._append`C${+t},${+e},${+i},${+h},${this._x1=+o},${this._y1=+l}`}arcTo(t,e,i,h,o){if(t=+t,e=+e,i=+i,h=+h,o=+o,o<0)throw new Error(`negative radius: ${o}`);let l=this._x1,r=this._y1,s=i-t,u=h-e,a=l-t,f=r-e,c=a*a+f*f;if(this._x1===null)this._append`M${this._x1=t},${this._y1=e}`;else if(c>p)if(!(Math.abs(f*s-u*a)>p)||!o)this._append`L${this._x1=t},${this._y1=e}`;else{let _=i-l,$=h-r,m=s*s+u*u,L=_*_+$*$,b=Math.sqrt(m),w=Math.sqrt(c),y=o*Math.tan((M-Math.acos((m+c-L)/(2*b*w)))/2),g=y/w,x=y/b;Math.abs(g-1)>p&&this._append`L${t+g*a},${e+g*f}`,this._append`A${o},${o},0,0,${+(f*_>a*$)},${this._x1=t+x*s},${this._y1=e+x*u}`}}arc(t,e,i,h,o,l){if(t=+t,e=+e,i=+i,l=!!l,i<0)throw new Error(`negative radius: ${i}`);let r=i*Math.cos(h),s=i*Math.sin(h),u=t+r,a=e+s,f=1^l,c=l?h-o:o-h;this._x1===null?this._append`M${u},${a}`:(Math.abs(this._x1-u)>p||Math.abs(this._y1-a)>p)&&this._append`L${u},${a}`,i&&(c<0&&(c=c%v+v),c>C?this._append`A${i},${i},0,1,${f},${t-r},${e-s}A${i},${i},0,1,${f},${this._x1=u},${this._y1=a}`:c>p&&this._append`A${i},${i},0,${+(c>=M)},${f},${this._x1=t+i*Math.cos(o)},${this._y1=e+i*Math.sin(o)}`)}rect(t,e,i,h){this._append`M${this._x0=this._x1=+t},${this._y0=this._y1=+e}h${i=+i}v${+h}h${-i}Z`}toString(){return this._}}function d(n){return function(){return n}}function q(n){let t=3;return n.digits=function(e){if(!arguments.length)return t;if(e==null)t=null;else{const i=Math.floor(e);if(!(i>=0))throw new RangeError(`invalid digits: ${e}`);t=i}return n},()=>new k(t)}function z(n){return typeof n=="object"&&"length"in n?n:Array.from(n)}function T(n){this._context=n}T.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){(this._line||this._line!==0&&this._point===1)&&this._context.closePath(),this._line=1-this._line},point:function(n,t){switch(n=+n,t=+t,this._point){case 0:this._point=1,this._line?this._context.lineTo(n,t):this._context.moveTo(n,t);break;case 1:this._point=2;default:this._context.lineTo(n,t);break}}};function N(n){return new T(n)}function O(n){return n[0]}function Z(n){return n[1]}function Q(n,t){var e=d(!0),i=null,h=N,o=null,l=q(r);n=typeof n=="function"?n:n===void 0?O:d(n),t=typeof t=="function"?t:t===void 0?Z:d(t);function r(s){var u,a=(s=z(s)).length,f,c=!1,_;for(i==null&&(o=h(_=l())),u=0;u<=a;++u)!(u<a&&e(f=s[u],u,s))===c&&((c=!c)?o.lineStart():o.lineEnd()),c&&o.point(+n(f,u,s),+t(f,u,s));if(_)return o=null,_+""||null}return r.x=function(s){return arguments.length?(n=typeof s=="function"?s:d(+s),r):n},r.y=function(s){return arguments.length?(t=typeof s=="function"?s:d(+s),r):t},r.defined=function(s){return arguments.length?(e=typeof s=="function"?s:d(!!s),r):e},r.curve=function(s){return arguments.length?(h=s,i!=null&&(o=h(i)),r):h},r.context=function(s){return arguments.length?(s==null?i=o=null:o=h(i=s),r):i},r}export{N as a,z as b,d as c,Q as l,I as u,q as w,O as x,Z as y};
