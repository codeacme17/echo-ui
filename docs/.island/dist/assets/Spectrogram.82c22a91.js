import{V as T,s as H,D,U as k,A as M,c as r}from"./index.1dc66bc0.js";import i from"react";import{T as R,o as E,c as F,b as I,G,S as Q,r as B,d as U,e as Y,i as X,P as W}from"./index.5a6550a4.js";import{jsxs as L,jsx as t}from"react/jsx-runtime";import{A as z}from"./Analyser.93bf318f.js";class q extends R{constructor(){super(E(q.getDefaults(),arguments,["frequency","type"])),this.name="BiquadFilter";const e=E(q.getDefaults(),arguments,["frequency","type"]);this._filter=this.context.createBiquadFilter(),this.input=this.output=this._filter,this.Q=new F({context:this.context,units:"number",value:e.Q,param:this._filter.Q}),this.frequency=new F({context:this.context,units:"frequency",value:e.frequency,param:this._filter.frequency}),this.detune=new F({context:this.context,units:"cents",value:e.detune,param:this._filter.detune}),this.gain=new F({context:this.context,units:"decibels",convert:!1,value:e.gain,param:this._filter.gain}),this.type=e.type}static getDefaults(){return Object.assign(R.getDefaults(),{Q:1,type:"lowpass",frequency:350,detune:0,gain:0})}get type(){return this._filter.type}set type(e){I(["lowpass","highpass","bandpass","lowshelf","highshelf","notch","allpass","peaking"].indexOf(e)!==-1,`Invalid filter type: ${e}`),this._filter.type=e}getFrequencyResponse(e=128){const a=new Float32Array(e);for(let s=0;s<e;s++){const d=Math.pow(s/e,2)*(2e4-20)+20;a[s]=d}const o=new Float32Array(e),c=new Float32Array(e),n=this.context.createBiquadFilter();return n.type=this.type,n.Q.value=this.Q.value,n.frequency.value=this.frequency.value,n.gain.value=this.gain.value,n.getFrequencyResponse(a,o,c),o}dispose(){return super.dispose(),this._filter.disconnect(),this.Q.dispose(),this.frequency.dispose(),this.gain.dispose(),this.detune.dispose(),this}}class b extends R{constructor(){super(E(b.getDefaults(),arguments,["frequency","type","rolloff"])),this.name="Filter",this.input=new G({context:this.context}),this.output=new G({context:this.context}),this._filters=[];const e=E(b.getDefaults(),arguments,["frequency","type","rolloff"]);this._filters=[],this.Q=new Q({context:this.context,units:"positive",value:e.Q}),this.frequency=new Q({context:this.context,units:"frequency",value:e.frequency}),this.detune=new Q({context:this.context,units:"cents",value:e.detune}),this.gain=new Q({context:this.context,units:"decibels",convert:!1,value:e.gain}),this._type=e.type,this.rolloff=e.rolloff,B(this,["detune","frequency","gain","Q"])}static getDefaults(){return Object.assign(R.getDefaults(),{Q:1,detune:0,frequency:350,gain:0,rolloff:-12,type:"lowpass"})}get type(){return this._type}set type(e){I(["lowpass","highpass","bandpass","lowshelf","highshelf","notch","allpass","peaking"].indexOf(e)!==-1,`Invalid filter type: ${e}`),this._type=e,this._filters.forEach(o=>o.type=e)}get rolloff(){return this._rolloff}set rolloff(e){const a=X(e)?e:parseInt(e,10),o=[-12,-24,-48,-96];let c=o.indexOf(a);I(c!==-1,`rolloff can only be ${o.join(", ")}`),c+=1,this._rolloff=a,this.input.disconnect(),this._filters.forEach(n=>n.disconnect()),this._filters=new Array(c);for(let n=0;n<c;n++){const s=new q({context:this.context});s.type=this._type,this.frequency.connect(s.frequency),this.detune.connect(s.detune),this.Q.connect(s.Q),this.gain.connect(s.gain),this._filters[n]=s}this._internalChannels=this._filters,U(this.input,...this._internalChannels,this.output)}getFrequencyResponse(e=128){const a=new q({frequency:this.frequency.value,gain:this.gain.value,Q:this.Q.value,type:this._type,detune:this.detune.value}),o=new Float32Array(e).map(()=>1);return this._filters.forEach(()=>{a.getFrequencyResponse(e).forEach((n,s)=>o[s]*=n)}),a.dispose(),o}dispose(){return super.dispose(),this._filters.forEach(e=>{e.dispose()}),Y(this,["detune","frequency","gain","Q"]),this.frequency.dispose(),this.Q.dispose(),this.detune.dispose(),this.gain.dispose(),this}}const Z=()=>{const p="https://codeacme17.github.io/1llest-waveform-vue/audios/loop-3.mp3",[e,a]=i.useState([]),[o,c]=i.useState(!1),n=i.useRef(),s=i.useRef(null),h=512/2;i.useEffect(()=>(s.current=new W(p),n.current=new z("fft",h),s.current.toDestination(),()=>{var f,g;(f=s.current)==null||f.disconnect(),(g=s.current)==null||g.dispose()}),[]);const d=async()=>{if(!s.current||!n.current){console.error("Analyser is not initialized");return}o?(s.current.stop(),cancelAnimationFrame(u.current),a([]),c(!1)):(s.current.connect(n.current),s.current.loop=!0,s.current.start(),c(!0),w())},u=i.useRef(0),w=()=>{var g;const f=(g=n.current)==null?void 0:g.getValue();if(f instanceof Float32Array){const v=Array.from(f).map((x,C)=>({frequency:C,amplitude:x}));a(v)}u.current=requestAnimationFrame(w)};return L("div",{className:"flex flex-col items-center gap-2",children:[t(T,{className:"w-full",data:e,fftSize:h}),t(H,{onClick:d,toggled:o,children:o?"Stop":"Start"})]})},J=()=>{const p="https://codeacme17.github.io/1llest-waveform-vue/audios/loop-2.mp3",[e,a]=i.useState([]),[o,c]=i.useState(!1),n=i.useRef(),s=i.useRef(null),h=i.useRef(null),d=i.useRef(null),u=i.useRef(null),w=512/2,f=300,g=1500,v=4e3,[x,C]=i.useState(0),[S,V]=i.useState(0),[A,P]=i.useState(0);i.useEffect(()=>{var l,y;return s.current=new W(p),n.current=new z("fft",w),h.current=new b(f,"lowshelf"),d.current=new b(g,"peaking"),u.current=new b(v,"highshelf"),s.current.connect(h.current),h.current.connect(d.current),(l=d.current)==null||l.connect(u.current),(y=u.current)==null||y.toDestination(),()=>{var m,_;(m=u.current)==null||m.disconnect(),(_=u.current)==null||_.dispose()}},[]),i.useEffect(()=>{var l,y,m;(l=h.current)==null||l.set({frequency:f,gain:x}),(y=d.current)==null||y.set({frequency:g,gain:S}),(m=u.current)==null||m.set({frequency:v,gain:A})},[x,S,A]);const $=async()=>{var l;if(!s.current||!n.current){console.error("Oscillator or Analyser is not initialized");return}o?(s.current.stop(),cancelAnimationFrame(N.current),a([]),c(!1)):((l=u.current)==null||l.connect(n.current),s.current.loop=!0,s.current.start(),c(!0),O())},N=i.useRef(0),O=()=>{var y;const l=(y=n.current)==null?void 0:y.getValue();if(l instanceof Float32Array){const m=Array.from(l).map((_,j)=>({frequency:j,amplitude:_}));a(m)}N.current=requestAnimationFrame(O)};return L("div",{className:"w-full flex flex-col items-center gap-2",children:[L(D.Group,{size:50,trackWidth:2,pointerWidth:5,pointerHeight:5,min:-25,max:25,bilateral:!0,children:[t(D,{topLabel:"LOW",bottomLabel:`${x}`,value:x,onChange:C}),t(D,{topLabel:"MID",bottomLabel:`${S}`,value:S,onChange:V}),t(D,{topLabel:"HIGH",bottomLabel:`${A}`,value:A,onChange:P})]}),t(T,{className:"w-full h-52",data:e,fftSize:w,axis:!0,grid:!0,shadow:!0}),t(H,{onClick:$,toggled:o,children:o?"Stop":"Start"})]})},ne=()=>t(k,{code:"<SpectrogramDefault />",scope:{SpectrogramDefault:Z},type:"link",url:"https://github.com/codeacme17/echo-ui/blob/main/docs/src/components/Example/SpectrogramDefault.tsx",classNames:{preview:"p-0 px-3 py-5"}}),ie=()=>t(k,{code:`<Spectrogram 
  axis 
  amplitudeRange={[-120, 20]} 
  xAxisTicks={[50, 500, 5000]} 
  yAxisTicks={[10, -60, -80]} 
/>`,scope:{Spectrogram:T}}),oe=()=>t(k,{code:`<Spectrogram 
  grid
  amplitudeRange={[-120, 20]} 
  xAxisTicks={[50, 500, 5000]} 
  yAxisTicks={[10, -60, -80]} 
/>`,scope:{Spectrogram:T}}),ae=()=>t(k,{code:"<SpectrogramEQ3 />",scope:{SpectrogramEQ3:J},type:"link",url:"https://github.com/codeacme17/echo-ui/blob/main/docs/src/components/Example/SpectrogramEQ3.tsx",classNames:{preview:"p-0 px-3 py-5"}}),ce=()=>t(M,{data:[{attribute:"data*",description:"Array data passed to the spectrogram(required)",type:t(r,{children:"SpectrogramDataPoint[]"}),default:"-"},{attribute:"fftSize",description:"Size of the Fast Fourier Transform (FFT) (must be a power of 2)",type:t(r,{children:"number"}),default:t(r,{children:"1024"})},{attribute:"amplitudeRange",description:"Amplitude range, this property specifies the range of the Y-axis",type:t(r,{children:"[number, number]"}),default:t(r,{children:"[-100, 10]"})},{attribute:"lineColor",description:"Line color",type:t(r,{children:"string"}),default:t(r,{children:"'var(--echo-primary)'"})},{attribute:"lineWidth",description:"Line width",type:t(r,{children:"number"}),default:t(r,{children:"2"})},{attribute:"axis",description:"Whether to display the axis",type:t(r,{children:"boolean"}),default:t(r,{children:"false"})},{attribute:"axisColor",description:"Axis font color",type:t(r,{children:"string"}),default:t(r,{children:"'var(--echo-muted-foreground)'"})},{attribute:"xAxisTicks",description:"Ticks displayed on the X-axis",type:t(r,{children:"number[]"}),default:t(r,{children:"[50, 100, 200, 500, 1000, 2000, 5000, 10000]"})},{attribute:"yAxisTicks",description:"Ticks displayed on the Y-axis",type:t(r,{children:"number[]"}),default:t(r,{children:"[-80, -60, -20, 0]"})},{attribute:"grid",description:"Whether to display grid lines",type:t(r,{children:"boolean"}),default:t(r,{children:"false"})},{attribute:"gridColor",description:"Grid line color",type:t(r,{children:"string"}),default:t(r,{children:"'var(--echo-background)'"})},{attribute:"shadow",description:"Whether to display shadow",type:t(r,{children:"boolean"}),default:t(r,{children:"false"})},{attribute:"shadowColor",description:"Shadow color",type:t(r,{children:"string"}),default:t(r,{children:"'var(--echo-primary)'"})},{attribute:"shadowDirection",description:"Shadow direction",type:t(r,{children:"'top' | 'bottom'"}),default:t(r,{children:"'bottom'"})},{attribute:"shadowHeight",description:"Shadow height",type:t(r,{children:"number"}),default:t(r,{children:"20"})}]});export{ie as A,ne as D,ae as E,oe as G,ce as S};
