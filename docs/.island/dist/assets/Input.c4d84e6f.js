import{U as o,b as i,A as s,c as t}from"./index.83878d6a.js";import{jsx as e}from"react/jsx-runtime";const u=()=>e(o,{code:"<Input />",scope:{Input:i}}),p=()=>e(o,{code:"<Input disabled value={30}/>",scope:{Input:i}}),d=()=>e(o,{code:`<div className="flex gap-4 items-center flex-wrap">
  <Input size="sm" />
  <Input size="md" />
  <Input size="lg" />
</div>`,scope:{Input:i}}),l=()=>e(o,{code:`<div className="flex gap-4 flex-wrap">
  <Input radius="none" />
  <Input radius="sm" />
  <Input radius="md" />
  <Input radius="lg" />
  <Input radius="full" />
</div>`,scope:{Input:i}}),h=()=>e(o,{code:"<Input min={-50} max={50} />",scope:{Input:i}}),b=()=>e(o,{code:"<Input bilateral value={50} />",scope:{Input:i}}),f=()=>e(o,{code:"<Input type='text' value={'echo-ui'} />",scope:{Input:i}}),I=()=>e(o,{code:"<Input step={10} sensitivity={1} />",scope:{Input:i}}),m=()=>e(o,{code:"<Input value={30} progressColor='#8b5cf6' className='focus:border-[#8b5cf6]' />",scope:{Input:i}}),v=()=>e(s,{data:[{attribute:"value",description:"The value of the input box",type:e(t,{children:"any"}),default:e(t,{children:"0"})},{attribute:"type",description:"The type of the input box (overrides the native type attribute)",type:e(t,{children:"'text' | 'number'"}),default:e(t,{children:"'number'"})},{attribute:"bilateral",description:"Whether to enable bidirectional dragging",type:e(t,{children:"boolean"}),default:e(t,{children:"false"})},{attribute:"size",description:"The size of the input box",type:e(t,{children:"'sm' | 'md' | 'lg'"}),default:e(t,{children:"'md'"})},{attribute:"radius",description:"The border radius of the input box",type:e(t,{children:"'none' | 'sm' | 'md' | 'lg' | 'full'"}),default:e(t,{children:"'md'"})},{attribute:"min",description:"The minimum value of the input box",type:e(t,{children:"number"}),default:e(t,{children:"0"})},{attribute:"max",description:"The maximum value of the input box",type:e(t,{children:"number"}),default:e(t,{children:"100"})},{attribute:"step",description:"The step value of the input box",type:e(t,{children:"number"}),default:e(t,{children:"1"})},{attribute:"sensitivity",description:"The sensitivity of the input box",type:e(t,{children:"1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10"}),default:e(t,{children:"5"})},{attribute:"prohibitDrag",description:"Whether to disable dragging",type:e(t,{children:"boolean"}),default:e(t,{children:"false"})},{attribute:"hideProgress",description:"Whether to hide the progress bar",type:e(t,{children:"boolean"}),default:e(t,{children:"false"})},{attribute:"progressColor",description:"The color of the progress bar",type:e(t,{children:"string"}),default:e(t,{children:"'var(--echo-primary)'"})},{attribute:"onChange",description:"Callback function when the value of the input box changes",type:e(t,{children:`(e: {
          value: any,
          nativeEvent?: React.ChangeEvent<HTMLInputElement>
        }) => void`}),default:"-"}]});export{b as B,u as D,v as I,h as M,m as P,l as R,d as S,f as T,p as a,I as b};
